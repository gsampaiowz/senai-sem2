<?xml version="1.0"?>
<doc>
    <assembly>
        <name>webapi.filmes.tarde</name>
    </assembly>
    <members>
        <member name="T:webapi.filmes.tarde.Controllers.FilmeController">
            <summary>
            Define que a rota de uma requisição será no seguinto formato
            dominio/api/nomeController
            exemplo: http://lobalhost:5000/api/Genero
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Controllers.FilmeController._filmeRepository">
            <summary>
            Objeto que receberá os métodos definidos na interface
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.#ctor">
            <summary>
            Instância do objeto FilmeRepository para que haja referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.GetAll">
            <summary>
            Endpoint que acessa o método de listar os Filmes
            </summary>
            <returns>Lista de Filmes e um status code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.GetById(System.Int32)">
            <summary>
            Endpoint que acessa o metodo Buscar um filme pelo seu ID
            </summary>
            <param name="id">ID do filme a ser buscado</param>
            <returns>Status code 200 e o objeto buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.Post(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Endpoint que acessa o método de cadastrar Filme
            </summary>
            <param name="novoFilme">Objeto recebido na requisição</param>
            <returns>Status Code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.Delete(System.Int32)">
            <summary>
            Endpoint que acessa o método de deletar Filme
            </summary>
            <returns>Status Code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.PutByUrl(System.Int32,webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Endpoint que acessa o método de atualizar Filme com id na url
            </summary>
            <returns>Status Code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.PutByBody(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Endpoint que acessa o método de atualizar Filme com id no corpo JSON
            </summary>
            <returns>Status Code</returns>
        </member>
        <member name="T:webapi.filmes.tarde.Controllers.GeneroController">
            <summary>
            Define que a rota de uma requisição será no seguinto formato
            dominio/api/nomeController
            exemplo: http://lobalhost:5000/api/Genero
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Controllers.GeneroController._generoRepository">
            <summary>
            Objeto que receberá os métodos definidos na interface
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.#ctor">
            <summary>
            Instância do objeto generoRepository para que haja referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.GetAll">
            <summary>
            Endpoint que acessa o método de listar os generos
            </summary>
            <returns>Lista de generos e um status code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.GetById(System.Int32)">
            <summary>
            Endpoint que acessa o metodo Buscar um genero pelo seu ID
            </summary>
            <param name="id">ID do genero a ser buscado</param>
            <returns>Status code 200 e o objeto buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.Post(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Endpoint que acessa o método de cadastrar genero
            </summary>
            <param name="novoGenero">Objeto recebido na requisição</param>
            <returns>Status Code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.Delete(System.Int32)">
            <summary>
            Endpoint que acessa o método de deletar genero
            </summary>
            <returns>Status Code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.PutById(System.Int32,webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Endpoint que acessa o método de atualizar genero com id na url
            </summary>
            <returns>Status Code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.Put(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Endpoint que acessa o método de atualizar genero com id no corpo JSON
            </summary>
            <returns>Status Code</returns>
        </member>
        <member name="T:webapi.filmes.tarde.Controllers.UsuarioController">
            <summary>
            
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.UsuarioController.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.UsuarioController.Login(webapi.filmes.tarde.Domains.UsuarioDomain)">
            <summary>
            Endpoint que acessa o método de Login
            </summary>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.UsuarioController.Post(webapi.filmes.tarde.Domains.UsuarioDomain)">
            <summary>
            Endpoint que acessa o metodo de cadastrar
            </summary>
            <param name="usuario"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.UsuarioController.GetAll">
            <summary>
            Endpoint que acessa o método de listar os usuarios
            </summary>
            <returns>Lista de usuarios e um status code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.UsuarioController.GetById(System.Int32)">
            <summary>
            Endpoint que acessa o metodo Buscar um usuario pelo seu ID
            </summary>
            <param name="id">ID do usuario a ser buscado</param>
            <returns>Status code 200 e o objeto buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.UsuarioController.Delete(System.Int32)">
            <summary>
            Endpoint que acessa o método de deletar usuario
            </summary>
            <returns>Status Code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.UsuarioController.PutByUrl(System.Int32,webapi.filmes.tarde.Domains.UsuarioDomain)">
            <summary>
            Endpoint que acessa o método de atualizar usuario com id na url
            </summary>
            <returns>Status Code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.UsuarioController.PutByBody(webapi.filmes.tarde.Domains.UsuarioDomain)">
            <summary>
            Endpoint que acessa o método de atualizar usuario com id no corpo JSON
            </summary>
            <returns>Status Code</returns>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.FilmeDomain">
            <summary>
            Classe que representa a entidade(tabela) Filme
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Domains.FilmeDomain.IdFilme">
            <summary>
            Chave primaria
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Domains.FilmeDomain.Titulo">
            <summary>
            Titulo Filme
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Domains.FilmeDomain.IdGenero">
            <summary>
            Genero Filme
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Domains.FilmeDomain.Genero">
            <summary>
            Referência para a classe GeneroDomain
            </summary>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.GeneroDomain">
            <summary>
            Classe que representa a entidade(tabela) Genero
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Domains.GeneroDomain.IdGenero">
            <summary>
            Atributo IdGenero
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Domains.GeneroDomain.Nome">
            <summary>
            Atributo Nome
            </summary>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.UsuarioDomain">
            <summary>
            
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Domains.UsuarioDomain.IdUsuario">
            <summary>
            
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Domains.UsuarioDomain.Email">
            <summary>
            
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Domains.UsuarioDomain.Senha">
            <summary>
            
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Domains.UsuarioDomain.Permissao">
             <summary>
             
            </summary>
        </member>
        <member name="T:webapi.filmes.tarde.Interfaces.IFilmeRepository">
            <summary>
            Interface responsável pelo repositório FilmeRepository
            Define os métodos que serão implementados pelo repositório
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.Cadastrar(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Cadastrar um novo Filme
            </summary>
            <param name="novoFilme">Objeto que será cadastrado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.ListarTodos">
            <summary>
            Retornar todos os filmes cadastrados
            </summary>
            <returns>Uma lista de objetos</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um Filme através do seu id
            </summary>
            <param name="id">Id do objeto a ser buscado</param>
            <returns>Objeto buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualizar um filme existente passando o id pelo corpo da requisição (JSON)
            </summary>
            <param name="filme">Objeto com as novas informações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualizar um filme existente passando o id na URL da requisição
            </summary>
            <param name="id">Id do objeto a ser atualizado</param>
            <param name="filme">Objeto com as novas informações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.Deletar(System.Int32)">
            <summary>
            Deletar um filme existente
            </summary>
            <param name="id">Id do objeto a ser deletado</param>
        </member>
        <member name="T:webapi.filmes.tarde.Interfaces.IGeneroRepository">
            <summary>
            Interface responsável pelo repositório GeneroRepository
            Define os métodos que serão implementados pelo repositório
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.Cadastrar(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Cadastrar um novo Gênero
            </summary>
            <param name="novoGenero">Objeto que será cadastrado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.ListarTodos">
            <summary>
            Retornar todos os gêneros cadastrados
            </summary>
            <returns>Uma lista de objetos</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um objeto através do seu id
            </summary>
            <param name="id">Id do objeto a ser buscado</param>
            <returns>Objeto buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualizar um gênero existente passando o id pelo corpo da requisição (JSON)
            </summary>
            <param name="genero">Objeto com as novas informações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualizar um gênero existente passando o id na URL da requisição
            </summary>
            <param name="id">Id do objeto a ser atualizado</param>
            <param name="genero">Objeto com as novas informações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.Deletar(System.Int32)">
            <summary>
            Deletar um gênero existente
            </summary>
            <param name="id">Id do objeto a ser deletado</param>
        </member>
        <member name="T:webapi.filmes.tarde.Interfaces.IUsuarioRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IUsuarioRepository.Login(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="email"></param>
            <param name="senha"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IUsuarioRepository.Cadastrar(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            
            </summary>
            <param name="email"></param>
            <param name="senha"></param>
            <param name="permissao"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IUsuarioRepository.ListarTodos">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IUsuarioRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um objeto através do seu id
            </summary>
            <param name="id">Id do objeto a ser buscado</param>
            <returns>Objeto buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IUsuarioRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.UsuarioDomain)">
            <summary>
            Atualizar um Usuario existente passando o id pelo corpo da requisição (JSON)
            </summary>
            <param name="Usuario">Objeto com as novas informações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IUsuarioRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.UsuarioDomain)">
            <summary>
            Atualizar um Usuario existente passando o id na URL da requisição
            </summary>
            <param name="id">Id do objeto a ser atualizado</param>
            <param name="Usuario">Objeto com as novas informações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IUsuarioRepository.Deletar(System.Int32)">
            <summary>
            Deletar um Usuario existente
            </summary>
            <param name="id">Id do objeto a ser deletado</param>
        </member>
        <member name="T:webapi.filmes.tarde.Repositories.FilmeRepository">
            <summary>
            Classe responsável pelo repositório dos filmes
            </summary>
        </member>
        <member name="F:webapi.filmes.tarde.Repositories.FilmeRepository.StringConexao">
            <summary>
            String de conexão com o banco de dados que recebe os seguintes parâmetros:
            Data Source : Nome do servidor do banco
            Initial Catalog: Nome do banco de dados
            Autenticação
                - windows : Integrated Security = True
                - SqlServer : User Id = sa; Pwd = Senha
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualiza um filme atraves do seu id, passando pelo corpo JSON
            </summary>
            <param name="filme"></param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualiza um filme atraves do seu id, passando este pela URL
            </summary>
            <param name="id">Id do Filme a ser atualizado</param>
            <param name="filme">Objeto do Filme a ser atualizado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um Filme pelo seu id
            </summary>
            <param name="id">Id do Filme a ser buscado</param>
            <returns>Filme que possui o id buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.Cadastrar(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Cadadtrar um novo Filme
            </summary>
            <param name="novoFilme">Objeto com as informações que serão cadastradas</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.Deletar(System.Int32)">
            <summary>
            Deleta um Filme atraves do seu id
            </summary>
            <param name="id">Id do Filme a ser deletado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.ListarTodos">
            <summary>
            Retornar todos os gêneros cadastrados
            </summary>
            <returns>Uma lista de objetos</returns>
        </member>
        <member name="T:webapi.filmes.tarde.Repositories.GeneroRepository">
            <summary>
            Classe responsável pelo repositório dos gêneros
            </summary>
        </member>
        <member name="F:webapi.filmes.tarde.Repositories.GeneroRepository.StringConexao">
            <summary>
            String de conexão com o banco de dados que recebe os seguintes parâmetros:
            Data Source : Nome do servidor do banco
            Initial Catalog: Nome do banco de dados
            Autenticação
                - windows : Integrated Security = True
                - SqlServer : User Id = sa; Pwd = Senha
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualiza um genero atraves do seu id, passando este pelo corpo JSON
            </summary>
            <param name="genero">Objeto do genero a ser atualizado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualiza um genero atraves do seu id, passando este pela URL
            </summary>
            <param name="id">Id do genero a ser atualizado</param>
            <param name="genero">Objeto do genero a ser atualizado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.BuscarPorId(System.Int32)">
            <summary>
            Busca um genero pelo seu id
            </summary>
            <param name="id">Id do genero a ser buscado</param>
            <returns>Genero que possui o id buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.Cadastrar(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Cadadtrar um novo genero
            </summary>
            <param name="novoGenero">Objeto com as informações que serão cadastradas</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.Deletar(System.Int32)">
            <summary>
            Deleta um genero atraves do seu id
            </summary>
            <param name="id">Id do genero a ser deletado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.ListarTodos">
            <summary>
            Retornar todos os gêneros cadastrados
            </summary>
            <returns>Uma lista de objetos</returns>
        </member>
        <member name="T:webapi.filmes.tarde.Repositories.UsuarioRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.UsuarioRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.UsuarioDomain)">
            <summary>
            
            </summary>
            <param name="usuario"></param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.UsuarioRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.UsuarioDomain)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="usuario"></param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.UsuarioRepository.BuscarPorId(System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.UsuarioRepository.Cadastrar(System.String,System.String,System.Nullable{System.Boolean})">
            <summary>
            
            </summary>
            <param name="email"></param>
            <param name="senha"></param>
            <param name="permissao"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.UsuarioRepository.Deletar(System.Int32)">
            <summary>
            
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.UsuarioRepository.ListarTodos">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.UsuarioRepository.Login(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="email"></param>
            <param name="senha"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
    </members>
</doc>
